Produce (0):
current: 7 / 2.1 baseline!
2.1 => 7
3.0 => 9
3.9 => 11
kafka/producer/sender.py:        version = self._client.api_version(ProduceRequest, max_version=7)

Fetch (1):
current: 6
2.1 => 10
3.0 => 12
3.9 => 17
kafka/consumer/fetcher.py:        version = self._client.api_version(FetchRequest, max_version=4)
# Requires KIP-320, leader epoch handling / fencing

ListOffsets (2):
current: 3
2.1 => 4
3.0 => 7
3.9 => 9
kafka/consumer/fetcher.py:        version = self._client.api_version(OffsetRequest, max_version=1)
# Requires KIP-320, leader epoch handling / fencing

Metadata (3):
current: 7 / 2.1 baseline!
2.1 => 7
3.0 => 11
3.9 => 12
kafka/client_async.py:            api_version = self.api_version(MetadataRequest, max_version=7)

OffsetCommit (8):
current: 2
2.1 => 6
3.0 => 8
3.9 => 9
kafka/coordinator/consumer.py:        version = self._client.api_version(OffsetCommitRequest, max_version=2)

OffsetFetch (9):
current: 1
2.1 => 5
3.0 => 8
3.9 => 9
kafka/coordinator/consumer.py:        version = self._client.api_version(OffsetFetchRequest, max_version=1)

FindCoordinator(10):
current: 0
2.1 => 2
3.0 => 4
3.9 => 6
kafka/coordinator/base.py:        request = GroupCoordinatorRequest[0](self.group_id)

JoinGroup(11):
current: 2
2.1 => 3
3.0 => 7
3.9 => 9
kafka/coordinator/base.py:        version = self._client.api_version(JoinGroupRequest, max_version=2)

Heartbeat (12)
current: 1
2.1 => 2
3.0 => 4
3.9 => 4
kafka/coordinator/base.py:        version = self._client.api_version(HeartbeatRequest, max_version=1)

LeaveGroup (13):
current: 1
2.1 => 2
3.0 => 4
3.9 => 5
kafka/coordinator/base.py:                version = self._client.api_version(LeaveGroupRequest, max_version=1)

SyncGroup (14):
current: 1
2.1 => 2
3.0 => 5
3.9 => 5
kafka/coordinator/base.py:        version = self._client.api_version(SyncGroupRequest, max_version=1)
kafka/coordinator/base.py:        version = self._client.api_version(SyncGroupRequest, max_version=1)
